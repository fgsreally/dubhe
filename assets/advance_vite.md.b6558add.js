import{_ as e,o as a,c as t,a as d}from"./app.c7558d4a.js";const u=JSON.parse('{"title":"vite独有","description":"","frontmatter":{},"headers":[{"level":2,"title":"开发时生产端","slug":"开发时生产端","link":"#开发时生产端","children":[]},{"level":2,"title":"共享模块","slug":"共享模块","link":"#共享模块","children":[]}],"relativePath":"advance/vite.md","lastUpdated":1692797287000}'),c={name:"advance/vite.md"},i=d('<h1 id="vite独有" tabindex="-1">vite独有 <a class="header-anchor" href="#vite独有" aria-hidden="true">#</a></h1><p>有一些功能<code>vite</code>独有</p><blockquote><p>我对<code>vite</code>没有任何偏向，只是<code>vite</code>对<code>esm</code>的支持度高，且本身功能较丰富，符合<code>dubhe</code>的设计</p></blockquote><h2 id="开发时生产端" tabindex="-1">开发时生产端 <a class="header-anchor" href="#开发时生产端" aria-hidden="true">#</a></h2><p>其他工具的模式是:生产端构建打包-&gt;消耗端开发时消耗，<code>vite</code>可以两端同时处于开发时进行开发，无需生产端<code>build</code>,</p><p><a href="./../question/#vite">相关问题</a>，<a href="./../api/cli.html">类型处理</a></p><h2 id="共享模块" tabindex="-1">共享模块 <a class="header-anchor" href="#共享模块" aria-hidden="true">#</a></h2><p><a href="./../advance/share.html">详见</a></p>',8),o=[i];function r(n,s,h,l,_,p){return a(),t("div",null,o)}const f=e(c,[["render",r]]);export{u as __pageData,f as default};
