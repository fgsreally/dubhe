import{_ as s,o as a,c as e,a as n}from"./app.c7558d4a.js";const D=JSON.parse('{"title":"共享模块","description":"","frontmatter":{},"headers":[{"level":2,"title":"同时构建应用+模块","slug":"同时构建应用-模块","link":"#同时构建应用-模块","children":[]}],"relativePath":"advance/share.md","lastUpdated":1692795527000}'),o={name:"advance/share.md"},t=n(`<h1 id="共享模块" tabindex="-1">共享模块 <a class="header-anchor" href="#共享模块" aria-hidden="true">#</a></h1><blockquote><p><code>vite</code>独有 如果真的需要两个应用使用同一个模块，这里所谓同一个并不是指内容or功能的等同，而是一定要来源自同一个文件 比如，在应用中，通过<code>weakmap</code>将一个类设为<code>key</code>,那想在消费端拿到这个值，必须要拿到这个类，即使在消费端手写了个一模一样的类or通过npm包打包这个类，这也不是同一个类了，自然也拿不到这个值。</p></blockquote><blockquote><p>当然这是一个比较极端的例子，但如果执意于用<code>dubhe</code>完全代替模块联邦，这是需要关注的</p></blockquote><h2 id="同时构建应用-模块" tabindex="-1">同时构建应用+模块 <a class="header-anchor" href="#同时构建应用-模块" aria-hidden="true">#</a></h2><p>正常情况下，<code>vite</code>应该是两份配置，或者说两个<code>mode</code>，一份是正常构建应用，一份是构建<code>dubhe</code>模块， 但如果</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// ..</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">app</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PubConfig</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>就会同时构建应用+模块，从而使热模式下，两个应用能用到同一个文件，同一个模块</p>`,7),l=[t];function p(c,r,d,i,_,h){return a(),e("div",null,l)}const F=s(o,[["render",p]]);export{D as __pageData,F as default};
