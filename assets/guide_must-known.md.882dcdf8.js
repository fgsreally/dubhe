import{_ as e,o,c as t,a as d}from"./app.c7558d4a.js";const u=JSON.parse('{"title":"用前须知","description":"","frontmatter":{},"headers":[],"relativePath":"guide/must-known.md","lastUpdated":1692708491000}'),c={name:"guide/must-known.md"},a=d('<h1 id="用前须知" tabindex="-1">用前须知 <a class="header-anchor" href="#用前须知" aria-hidden="true">#</a></h1><p>需要关注这几个点</p><ol><li><p>存在热模式和冷模式两种， 冷模式下，打包出来的产物和安装<code>npm</code>包的正常产物完全一致，热模式下，则是在浏览器中<code>import</code>。一个生产端下的产物只能使用同模式</p></li><li><p>本质上是<code>esm</code>/<code>importmap</code>体系，但提供了<code>100%</code>的兼容，如果执意使用<code>umd</code>等方案，<code>dubhe</code>也许帮不到你</p></li><li><p>请放心大胆的在各个应用之间共享代码，对于耦合的影响，<code>dubhe</code>有做一些准备</p></li><li><p>鉴于其对css的特殊处理，目前只支持web平台。</p></li><li><p>需要关注缓存和<a href="./../api/cli.html">命令行工具</a>里的东西，前者是性能的保证，后者则是包括绝大部分可能会用到的功能</p></li></ol>',3),i=[a];function s(p,n,r,_,l,m){return o(),t("div",null,i)}const f=e(c,[["render",s]]);export{u as __pageData,f as default};
